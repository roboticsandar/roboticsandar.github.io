{"hash":"ad09b57c30394a519eea03c5f2a04ae8b3f6f46c","data":{"post":{"title":"Robotics","path":"/glossary/robotics/","date":"6. February 2019","timeToRead":5,"description":"A robot is a machine or device —especially one programmable by a computer— capable of performing tasks that may or may not imitate human actions and other complex series of actions automatically.theres a significant diffference betwen a machine(eg:car engines) and robots. A robot must be self dependent and dynamic.","content":"<p>A robot is a machine or device —especially one programmable by a computer— capable of performing tasks that may or may not imitate human actions and other complex series of actions automatically.theres a significant diffference betwen a machine(eg:car engines) and robots. A robot must be self dependent and dynamic.</p>\n<h2 id=\"manipulator\"><a href=\"#manipulator\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Manipulator</h2>\n<p>Just like the human arm, the robot consists of what is called a manipulator having several joints and links.</p>\n<h2 id=\"endeffector\"><a href=\"#endeffector\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Endeffector</h2>\n<p>The base of the manipulator is fixed to base support and at its other free end, the Endeffector is attached.</p>\n<p>The Endeffector is expected to perform tasks normally performed by the palm and finger arrangements of the human arm.</p>\n<h2 id=\"the-locomotion-device\"><a href=\"#the-locomotion-device\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The Locomotion Device</h2>\n<p>In the case of Human Beings the power for the movement of the arm, the palm and fingers is provided by muscles. For the robot the power for the movement (locomotion) is provided by the motors. The motors used for providing locomotion in robots are of three types depending on the source of energy: Electric, Hydraulic or Pneumatic.</p>\n<h2 id=\"controller\"><a href=\"#controller\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Controller</h2>\n<p>The digital computer (both the hardware and the software) acts as a controller to the robot. The controller functions in a manner analogous to the human brain. With the help of this controller, the robot is able to carry out the assigned tasks. The controller directs and controls the movement of the Manipulator and the Endeffector. In other words, the controller controls the robot.</p>\n<h2 id=\"sensors\"><a href=\"#sensors\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sensors</h2>\n<p>Without the data supplied by the sense organs, the brain would be incapable of intelligence. In other words the controller (the computer) of the robot cannot do any meaningful task, if the robot is not with a component analogous to the sense organs of the human body. Thus, the fifth and the most important component of the robot is the set of sensors. Sensors are nothing but measuring instruments which measures quantities such as position, velocity, force, torque, proximity, temperature, etc.</p>\n<h2 id=\"actuator\"><a href=\"#actuator\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Actuator</h2>\n<p>An actuator is a component of a machine that is responsible for moving and controlling a mechanism or system </p>\n<h2 id=\"modeling-and-simulation\"><a href=\"#modeling-and-simulation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Modeling and Simulation</h2>\n<p>Modeling and simulation is the use of a physical or logical representation of a given system to generate data and help determine decisions or make predictions about the system. CAD , MATLAB</p>\n<h2 id=\"motion-control-electronics\"><a href=\"#motion-control-electronics\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Motion Control (Electronics)</h2>\n<p>Motion control is a involves in moving robot in a controlled manner. The main components involved typically include a motion controller and one or more actuators.</p>\n<p>Motion control may be open loop or closed loop. In open loop systems, the controller sends a command to the actuator, and does not know if the desired motion was actually achieved.</p>\n<p>For tighter control with more precision, a measuring device may be added to the system (usually near the end motion). When the measurement is converted to a signal that is sent back to the controller, and the controller compensates for any error, it becomes a Closed loop System.</p>\n<h2 id=\"algorithm-development-programming\"><a href=\"#algorithm-development-programming\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Algorithm Development (Programming)</h2>\n<p>As modern robots address real-world problems in dynamic, unstructured, and open environments, novel challenges arise in the areas of robot control algorithms and motion planning. These challenges stem from an increased need for autonomy and flexibility in robot motion and task execution. Adequate algorithms for control and motion planning will have to capture high-level motion strategies that adapt to sensor feedback.</p>\n<h2 id=\"localization\"><a href=\"#localization\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Localization</h2>\n<p>Robot localization is the process of determining where a mobile robot is located with respect to its environment. Localization is one of the most fundamental competencies required by an autonomous robot as the knowledge of the robot's own location is an essential precursor to making decisions about future actions</p>\n<h2 id=\"path-planning\"><a href=\"#path-planning\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Path Planning</h2>\n<p>Path-planning is an important primitive for autonomous mobile robots that lets robots find the shortest – or otherwise optimal – path between two points. Otherwise optimal paths could be paths that minimize the amount of turning, the amount of braking or whatever a specific application requires. Algorithms to find a shortest path are important not only in robotics, but also in network routing, video games and gene sequencing.</p>\n<h2 id=\"forward-and-inverse-kinematics\"><a href=\"#forward-and-inverse-kinematics\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Forward and Inverse Kinematics</h2>\n<p>In order to plan a robot’s movements, we have to understand the relationship between the actuators that we can control and the robot’s resulting position in the environment. For static arms, this is rather straightforward: if we know the position/angle of each joint, we can calculate the position of its end-effectors using trigonometry. This process is known as forward kinematics. If we want to calculate the position each joint needs to be at, we need to invert this relationship. This is known as inverse kinematics.</p>\n<h2 id=\"locomotion-and-manipulation\"><a href=\"#locomotion-and-manipulation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Locomotion and Manipulation</h2>\n<p>locomotion as the ability of the robot to move and manipulation as the ability to move objects in the environment of the robot. Both activities are closely related: during locomotion the robot uses its motors to exert forces on its environment (ground, water or air) to move itself, during manipulation it uses – sometimes the same – motors to exert forces on objects to move them relative to the environment.</p>\n<h2 id=\"proteus\"><a href=\"#proteus\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Proteus</h2>\n<p>Proteus is a software used for electronic design automation(EDA).EDA includes the softwares used to design electronic systems, circuits, circuit boards and chips. The software is basically used for schematic capture, simulation, and PCB layout design.</p>\n<p>The microcontroller simulation in proteus works by applying hex file to the schematic microcontroller part which is then co-simulated with analog and digital electronics connected to it.It is a convenient to use as teaching tool and project prototyping.</p>\n<p>Proteus allows arduino programs to be written with simple flowcharting methods and arduino shields to be placed on the schematic with a mouse click. The entire arduino system can then be simulated, tested and debugged in software.</p>\n<h2 id=\"robot-operating-system-ros\"><a href=\"#robot-operating-system-ros\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Robot Operating System (ROS)</h2>\n<p>Developing a robot with a computer brain requires a bunch of software tools on the computer side—like software drivers, third party tools for computer vision and simulation tools. ROS framework gathers all these tools and manages how you develop a code for your robot</p>\n<p>The concept of ROS goes far beyond just a framework. ROS is an OS in concept because it provides all the services that any other OS does—like hardware abstraction, low-level device control, implementation of commonly-used functionality, message-passing between processes, and package management. Even though ROS is still a framework that isn't a standalone OS or an RTOS and isn't the only framework for robots, it seems to be adopted widely and have a large developers community.</p>\n<p>The robot operating system Powering the world's robots is a essentially a filesystem that will let you organize all of your robotics code.</p>\n<p>Why start with software, and not hardware? In simulation, and with the way the Robot Operating System is organized, you WILL learn how to interface with simulated controllers and how to actuate simulated robots, and be able to put entire systems together. A long story short, a robot is essentially a local area network of sensors and actuators connected by physical joints in usually, a tree like structure. You will shortly realize that Arduino is just a device used to communicate to hardware, and the real stuff is done by learning the ideas that software organizes. </p>\n","headings":[{"value":"Manipulator","depth":2,"anchor":"#manipulator"},{"value":"Endeffector","depth":2,"anchor":"#endeffector"},{"value":"The Locomotion Device","depth":2,"anchor":"#the-locomotion-device"},{"value":"Controller","depth":2,"anchor":"#controller"},{"value":"Sensors","depth":2,"anchor":"#sensors"},{"value":"Actuator","depth":2,"anchor":"#actuator"},{"value":"Modeling and Simulation","depth":2,"anchor":"#modeling-and-simulation"},{"value":"Motion Control (Electronics)","depth":2,"anchor":"#motion-control-electronics"},{"value":"Algorithm Development (Programming)","depth":2,"anchor":"#algorithm-development-programming"},{"value":"Localization","depth":2,"anchor":"#localization"},{"value":"Path Planning","depth":2,"anchor":"#path-planning"},{"value":"Forward and Inverse Kinematics","depth":2,"anchor":"#forward-and-inverse-kinematics"},{"value":"Locomotion and Manipulation","depth":2,"anchor":"#locomotion-and-manipulation"},{"value":"Proteus","depth":2,"anchor":"#proteus"},{"value":"Robot Operating System (ROS)","depth":2,"anchor":"#robot-operating-system-ros"}]}},"context":{}}